{"ast":null,"code":"import _defineProperty from \"/Users/soogeun/Documents/GitHub/uitda/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/soogeun/Documents/GitHub/uitda/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Board/PostCard/Cards/CardCompoents/PhotoBox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject11() {\n  const data = _taggedTemplateLiteral([\"\\n\"]);\n\n  _templateObject11 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  const data = _taggedTemplateLiteral([\"\\n\"]);\n\n  _templateObject10 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 2.5rem;\\n    width: 2.5rem;\\n    border-radius: 50%;\\n\\n    position: absolute;\\n    right: 1rem;\\n\\n    display: \", \";\\n\\n    background-color: white;\\n\\n    :hover {\\n        right: .875rem;\\n        top: -0.125rem;\\n        height: 2.75rem;\\n        width: 2.75rem;\\n        box-shadow: 0 0 10px rgba(0,0,0,.3);\\n    }\\n\"]);\n\n  _templateObject9 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 2.5rem;\\n    width: 2.5rem;\\n    border-radius: 50%;\\n\\n    position: absolute;\\n    left: 1rem;\\n\\n    background-color: white;\\n\\n    display: \", \";\\n\\n    :hover {\\n        left: .875rem;\\n        top: -0.125rem;\\n        height: 2.75rem;\\n        width: 2.75rem;\\n        box-shadow: 0 0 10px rgba(0,0,0,.3);\\n    }\\n\"]);\n\n  _templateObject8 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: \", \";\\n    width: 100%;\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background: rgba(0, 0, 0, 0.25);\\n    opacity: 1;\\n    transition: opacity 0.25s;\\n\\n    :hover {\\n        opacity: 0.5;\\n    }\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 100%;\\n    flex: 1;    \\n\\n    background-image: \", \";\\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: cover;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    width: \", \";\\n    height: \", \";\\n    position: absolute;\\n    top: 0;\\n    left: \", \";\\n\\n    display: flex;\\n    flex-flow: row nowrap;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 0;\\n    padding-top: 70%;\\n    position: absolute;\\n    top: 0;\\n    display: block;\\n    overflow: hidden;\\n\\n    background-image: \", \";\\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: cover;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 0;\\n    padding-top: 70%;\\n    position: relative;\\n    display: block;\\n    overflow: hidden;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n// 상위 컴포넌트: MarketCard, NetworkCard\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport basicImg from './Basic_img.jpg';\n/* Styled-Components */\n\nconst BaseDiv = styled.div(_templateObject());\nconst PhotoWrapper = styled.div(_templateObject2());\nconst PhotoLink = styled.a(_templateObject3(), props => props.hasPhoto ? 'none' : \"url(\".concat(basicImg, \")\"));\nconst ImgList = styled.div(_templateObject4(), props => props.width, props => props.height, props => props.posLeft);\nconst ImgItem = styled.div(_templateObject5(), props => \"url(\".concat(props.imgURL, \")\"));\nconst BlackMask = styled.div(_templateObject6());\nconst ButtonContainer = styled.div(_templateObject7(), props => props.posTop);\nconst PrevButton = styled.button(_templateObject8(), props => {\n  return !props.isButtonOn && 'none';\n});\nconst NextButton = styled.button(_templateObject9(), props => {\n  return !props.isButtonOn && 'none';\n});\nconst CircleContainer = styled.div(_templateObject10());\nconst CircleButton = styled.button(_templateObject11()); /////////////////////////////\n\nclass PhotoBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this._handleResize = e => {\n      this.setState(_objectSpread({}, this.state, {\n        containerWidth: this.container.offsetWidth\n      }));\n    };\n\n    this._handleHover = e => {};\n\n    this._ClickPrevButton = () => {\n      this.setState({\n        photoOrder: this.state.photoOrder - 1\n      });\n    };\n\n    this._ClickNextButton = () => {\n      this.setState({\n        photoOrder: this.state.photoOrder + 1\n      });\n    };\n\n    this._ClickCircleButton = i => {\n      console.log(i);\n      this.setState(_objectSpread({}, this.state, {\n        photoOrder: i\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      photoOrder: 0,\n      containerWidth: this.container.offsetWidth,\n      isHover: false\n    });\n    window.addEventListener('resize', this._handleResize); // 브라우저 창(window)의 크기가 변화되는 이벤트를 받음.\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._handleResize);\n  }\n\n  _renderContents() {\n    const _this$props = this.props,\n          filelist = _this$props.filelist,\n          boardName = _this$props.boardName,\n          postId = _this$props.postId;\n    const _this$state = this.state,\n          photoOrder = _this$state.photoOrder,\n          containerWidth = _this$state.containerWidth,\n          isHover = _this$state.isHover;\n    let hasPhoto = filelist.length !== 0;\n    let listWidth = containerWidth * filelist.length;\n    let imgHeight = containerWidth * 0.7;\n    let listPosLeft = -(containerWidth * photoOrder);\n    let buttonPosTop = imgHeight / 2 - 18;\n    let isPrevButtonOn = hasPhoto && photoOrder !== 0;\n    let isNextButtonOn = hasPhoto && photoOrder !== filelist.length - 1;\n    let postURL = \"/board/\".concat(boardName, \"/\").concat(postId);\n    return React.createElement(PhotoWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(PhotoLink, {\n      hasPhoto: hasPhoto,\n      href: postURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, // 사진 리스트\n    hasPhoto && React.createElement(ImgList, {\n      width: \"\".concat(listWidth, \"px\"),\n      height: \"\".concat(imgHeight, \"px\"),\n      posLeft: \"\".concat(listPosLeft, \"px\"),\n      ref: ref => {\n        this.imgListDOM = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, filelist.map((file, id) => {\n      return React.createElement(ImgItem, {\n        imgURL: file.location,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    })), React.createElement(BlackMask, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), // 사진 넘기기 버튼\n    // filelist.length > 1 &&\n    React.createElement(ButtonContainer, {\n      isHover: isHover,\n      posTop: \"\".concat(buttonPosTop, \"px\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(PrevButton, {\n      isButtonOn: isPrevButtonOn,\n      onClick: this._ClickPrevButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(NextButton, {\n      isButtonOn: isNextButtonOn,\n      onClick: this._ClickNextButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), // 사진 순서 표시하는 동글뺑이들\n    filelist.length > 1 && React.createElement(CircleContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, filelist.map((f, i) => {\n      let isHighLight = photoOrder === i;\n      return React.createElement(CircleButton, {\n        isHighLight: isHighLight,\n        onClick: i => {\n          this._ClickCircleButton(i);\n        },\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      });\n    })));\n  }\n\n  render() {\n    const containerWidth = this.state.containerWidth;\n    return React.createElement(BaseDiv, {\n      ref: ref => {\n        this.container = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, containerWidth && this._renderContents());\n  }\n\n}\n\nPhotoBox.propTypes = {\n  filelist: PropTypes.array.isRequired,\n  boardName: PropTypes.string.isRequired,\n  postId: PropTypes.number.isRequired\n};\nexport default PhotoBox;","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Board/PostCard/Cards/CardCompoents/PhotoBox.js"],"names":["React","Component","styled","PropTypes","basicImg","BaseDiv","div","PhotoWrapper","PhotoLink","a","props","hasPhoto","ImgList","width","height","posLeft","ImgItem","imgURL","BlackMask","ButtonContainer","posTop","PrevButton","button","isButtonOn","NextButton","CircleContainer","CircleButton","PhotoBox","state","_handleResize","e","setState","containerWidth","container","offsetWidth","_handleHover","_ClickPrevButton","photoOrder","_ClickNextButton","_ClickCircleButton","i","console","log","componentDidMount","isHover","window","addEventListener","componentWillUnmount","removeEventListener","_renderContents","filelist","boardName","postId","length","listWidth","imgHeight","listPosLeft","buttonPosTop","isPrevButtonOn","isNextButtonOn","postURL","ref","imgListDOM","map","file","id","location","f","isHighLight","render","propTypes","array","isRequired","string","number"],"mappings":"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","sourcesContent":["// 상위 컴포넌트: MarketCard, NetworkCard\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport basicImg from './Basic_img.jpg';\n\n/* Styled-Components */\n\nconst BaseDiv = styled.div`\n    width: 100%;\n`\n\nconst PhotoWrapper = styled.div`\n    width: 100%;\n    height: 0;\n    padding-top: 70%;\n    position: relative;\n    display: block;\n    overflow: hidden;\n`;\n\nconst PhotoLink = styled.a`\n    width: 100%;\n    height: 0;\n    padding-top: 70%;\n    position: absolute;\n    top: 0;\n    display: block;\n    overflow: hidden;\n\n    background-image: ${props => \n        props.hasPhoto ? 'none' : `url(${basicImg})`};\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: cover;\n`;\n\nconst ImgList = styled.div`\n    width: ${props => props.width};\n    height: ${props => props.height};\n    position: absolute;\n    top: 0;\n    left: ${props => props.posLeft};\n\n    display: flex;\n    flex-flow: row nowrap;\n`;\n\nconst ImgItem = styled.div`\n    height: 100%;\n    flex: 1;    \n\n    background-image: ${props => `url(${props.imgURL})`};\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: cover;\n`;\n\nconst BlackMask = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.25);\n    opacity: 1;\n    transition: opacity 0.25s;\n\n    :hover {\n        opacity: 0.5;\n    }\n`;\n\nconst ButtonContainer = styled.div`\n    position: absolute;\n    top: ${props => props.posTop};\n    width: 100%;\n`;\n\nconst PrevButton = styled.button`\n    height: 2.5rem;\n    width: 2.5rem;\n    border-radius: 50%;\n\n    position: absolute;\n    left: 1rem;\n\n    background-color: white;\n\n    display: ${props => {\n        return !(props.isButtonOn) && 'none' \n    }};\n\n    :hover {\n        left: .875rem;\n        top: -0.125rem;\n        height: 2.75rem;\n        width: 2.75rem;\n        box-shadow: 0 0 10px rgba(0,0,0,.3);\n    }\n`;\n\nconst NextButton = styled.button`\n    height: 2.5rem;\n    width: 2.5rem;\n    border-radius: 50%;\n\n    position: absolute;\n    right: 1rem;\n\n    display: ${props => {\n        return !(props.isButtonOn) && 'none' \n    }};\n\n    background-color: white;\n\n    :hover {\n        right: .875rem;\n        top: -0.125rem;\n        height: 2.75rem;\n        width: 2.75rem;\n        box-shadow: 0 0 10px rgba(0,0,0,.3);\n    }\n`;\n\nconst CircleContainer = styled.div`\n`;\n\nconst CircleButton = styled.button`\n`;\n\n/////////////////////////////\n\n\nclass PhotoBox extends Component {\n\n    state = {}\n\n    componentDidMount() {\n        this.setState({\n            photoOrder: 0,\n            containerWidth: this.container.offsetWidth,\n            isHover: false\n        })\n        window.addEventListener('resize', this._handleResize)       // 브라우저 창(window)의 크기가 변화되는 이벤트를 받음.\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this._handleResize)\n    }\n\n    _handleResize = (e) => {\n        this.setState({\n            ...this.state,\n            containerWidth: this.container.offsetWidth,\n        })\n    }\n\n    _handleHover = (e) => {\n\n    }\n\n    _ClickPrevButton = () => {\n        this.setState({\n            photoOrder: this.state.photoOrder - 1\n        })\n    }\n\n    _ClickNextButton = () => {\n        this.setState({\n            photoOrder: this.state.photoOrder + 1\n        })\n    }\n\n    _ClickCircleButton = (i) => {\n        console.log(i);\n        this.setState({\n            ...this.state,\n            photoOrder: i\n        })\n    }\n\n    _renderContents() {\n        const { filelist, boardName, postId } = this.props;\n        const { photoOrder, containerWidth, isHover } = this.state;\n        let hasPhoto = filelist.length !== 0;\n\n        let listWidth = containerWidth * filelist.length;\n        let imgHeight = containerWidth * 0.7;\n\n        let listPosLeft = -(containerWidth * photoOrder);\n\n        let buttonPosTop = (imgHeight / 2) - 18;\n\n        let isPrevButtonOn = hasPhoto && (photoOrder !== 0);\n        let isNextButtonOn = hasPhoto && (photoOrder !== (filelist.length - 1));\n\n        let postURL = `/board/${boardName}/${postId}`;\n\n        return (\n            <PhotoWrapper>\n                <PhotoLink hasPhoto={hasPhoto} href={postURL}>\n                    {\n                        // 사진 리스트\n                        hasPhoto &&\n                        <ImgList \n                            width={`${listWidth}px`} \n                            height={`${imgHeight}px`} \n                            posLeft={`${listPosLeft}px`} \n                            ref={ref => {this.imgListDOM = ref}}>\n                            \n                            {filelist.map((file, id) => {\n                                return <ImgItem imgURL={file.location} key={id} />\n                            })}\n                        </ImgList> \n                    }\n                    {/* 사진이 있든 없든 공통적으로 BlackMask 가짐 */}\n                    <BlackMask/>\n                </PhotoLink>\n                {\n                    // 사진 넘기기 버튼\n                    // filelist.length > 1 &&\n                    <ButtonContainer isHover={isHover} posTop={`${buttonPosTop}px`} >\n                        <PrevButton isButtonOn={isPrevButtonOn} onClick={this._ClickPrevButton} />\n                        <NextButton isButtonOn={isNextButtonOn} onClick={this._ClickNextButton} />\n                    </ButtonContainer> \n                }\n                {\n                    // 사진 순서 표시하는 동글뺑이들\n                    filelist.length > 1 &&\n                    <CircleContainer>\n                        {filelist.map((f, i) => {\n                            let isHighLight = photoOrder === i;\n                            return <CircleButton \n                                isHighLight={isHighLight} \n                                onClick={(i) => {this._ClickCircleButton(i)}}\n                                key={i}/>\n                        })}\n                    </CircleContainer> \n                }\n            </PhotoWrapper>\n            \n        )\n    }\n\n    render() {\n        const {containerWidth} = this.state;\n\n        return (\n            <BaseDiv ref={ref => {this.container = ref}}>\n                {containerWidth && this._renderContents()}\n            </BaseDiv>\n        )\n    }\n}\n\nPhotoBox.propTypes = {\n    filelist: PropTypes.array.isRequired,\n    boardName: PropTypes.string.isRequired,\n    postId: PropTypes.number.isRequired,\n}\n\nexport default PhotoBox;"]},"metadata":{},"sourceType":"module"}