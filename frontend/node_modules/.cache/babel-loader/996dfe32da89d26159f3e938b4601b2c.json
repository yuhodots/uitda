{"ast":null,"code":"var _jsxFileName = \"/Users/soogeun/Documents/Uitda/uitda-test/frontend/src/containers/RegisterContainer.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport RegisterForm from \"../components/Register/RegisterForm\";\nimport { getStatusRequest, registerRequest, loginRequest } from \"../store/actions/auth\";\n\nclass RegisterContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._renderRegister = () => {\n      return React.createElement(RegisterForm, {\n        postRegister: this.props.registerRequest,\n        postLogin: this.props.loginRequest,\n        isSuccess: this.props.isSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getStatusRequest();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : this._renderRegister());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    userInfo: state.auth.userInfo,\n    isSuccess: state.auth.registerSuccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStatusRequest: () => {\n      dispatch(getStatusRequest());\n    },\n    registerRequest: (username, password) => {\n      dispatch(registerRequest(username, password));\n    },\n    loginRequest: (username, password) => {\n      dispatch(loginRequest(username, password));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer);","map":{"version":3,"sources":["/Users/soogeun/Documents/Uitda/uitda-test/frontend/src/containers/RegisterContainer.js"],"names":["React","Component","Redirect","connect","RegisterForm","getStatusRequest","registerRequest","loginRequest","RegisterContainer","_renderRegister","props","isSuccess","componentDidMount","render","isLoggedIn","mapStateToProps","state","auth","userInfo","registerSuccess","mapDispatchToProps","dispatch","username","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SACIC,gBADJ,EAEIC,eAFJ,EAGIC,YAHJ,QAIO,uBAJP;;AAMA,MAAMC,iBAAN,SAAgCP,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAMtCQ,eANsC,GAMpB,MAAM;AACpB,aACI,oBAAC,YAAD;AACI,QAAA,YAAY,EAAE,KAAKC,KAAL,CAAWJ,eAD7B;AAEI,QAAA,SAAS,EAAE,KAAKI,KAAL,CAAWH,YAF1B;AAGI,QAAA,SAAS,EAAE,KAAKG,KAAL,CAAWC,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH,KAdqC;AAAA;;AAEtCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWL,gBAAX;AACH;;AAYDQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKH,KAAL,CAAWI,UAAX,GACA,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,KAAKL,eAAL,EAJR,CADJ;AASH;;AA1BqC;;AA6B1C,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,UAAU,EAAEE,KAAK,CAACC,IAAN,CAAWH,UADpB;AAEHI,IAAAA,QAAQ,EAAEF,KAAK,CAACC,IAAN,CAAWC,QAFlB;AAGHP,IAAAA,SAAS,EAAEK,KAAK,CAACC,IAAN,CAAWE;AAHnB,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhB,IAAAA,gBAAgB,EAAE,MAAM;AAACgB,MAAAA,QAAQ,CAAChB,gBAAgB,EAAjB,CAAR;AAA6B,KADnD;AAEHC,IAAAA,eAAe,EAAE,CAACgB,QAAD,EAAWC,QAAX,KAAwB;AAACF,MAAAA,QAAQ,CAACf,eAAe,CAACgB,QAAD,EAAWC,QAAX,CAAhB,CAAR;AAA8C,KAFrF;AAGHhB,IAAAA,YAAY,EAAE,CAACe,QAAD,EAAWC,QAAX,KAAwB;AAACF,MAAAA,QAAQ,CAACd,YAAY,CAACe,QAAD,EAAWC,QAAX,CAAb,CAAR;AAA2C;AAH/E,GAAP;AAKH,CAND;;AAQA,eAAepB,OAAO,CAACY,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CZ,iBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport RegisterForm from \"../components/Register/RegisterForm\";\nimport { \n    getStatusRequest,\n    registerRequest,\n    loginRequest\n} from \"../store/actions/auth\";\n\nclass RegisterContainer extends Component {\n\n    componentDidMount() {\n        this.props.getStatusRequest();\n    }\n\n    _renderRegister = () => {\n        return (\n            <RegisterForm \n                postRegister={this.props.registerRequest}\n                postLogin={this.props.loginRequest}\n                isSuccess={this.props.isSuccess}    \n            />\n        )\n    }\n\n    render() {\n        return(\n            <div>\n                {\n                    this.props.isLoggedIn ?\n                    <Redirect to='/'/> :\n                    this._renderRegister()\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.auth.isLoggedIn,\n        userInfo: state.auth.userInfo,\n        isSuccess: state.auth.registerSuccess\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getStatusRequest: () => {dispatch(getStatusRequest())},\n        registerRequest: (username, password) => {dispatch(registerRequest(username, password))},\n        loginRequest: (username, password) => {dispatch(loginRequest(username, password))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer);"]},"metadata":{},"sourceType":"module"}