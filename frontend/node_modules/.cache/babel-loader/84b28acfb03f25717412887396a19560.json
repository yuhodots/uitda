{"ast":null,"code":"import _defineProperty from \"/Users/soogeun/Documents/GitHub/uitda/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/soogeun/Documents/GitHub/uitda/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/BoardDetail/BoardDetail.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 70%;\\n    min-width: 40rem;\\n    min-height: \", \";\\n    margin: 0 auto;\\n    padding: 3rem 2rem;\\n\\n    background-color: \", \";\\n\\n    /* \\uADF8\\uB9BC\\uC790 \\uD6A8\\uACFC */\\n    box-shadow: 0 0 10px rgba(0,0,0,.1);\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    background-color: \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n// 상위 컴포넌트: BoardDetailContainer\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { HeaderBox, PhotoBox, DescriptionBox, CommentBox } from \"./subcomponents\";\nimport { colors } from \"../../styles/variables\";\n/* Styled Components */\n\n/* 배경색을 깔기 위해 만든 div 테그 */\n\nconst BackgroundDiv = styled.div(_templateObject(), colors.gray_bg);\n/*  내용물들을 담을 컨테이너 div 태그\n    최소 높이를 현재 창의 높이로 설정하여, content들이 적어도 화면 전체 높이를 차지 할 수 있도록 함.\n    너비는 전체 가로의 70%만을 차지하는 반응 크기를 사용  */\n\nconst ContainerDiv = styled.div(_templateObject2(), props => props.minHeight, colors.white);\n/* React Component */\n\nclass BoardDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this._handleResize = e => {\n      this.setState(_objectSpread({}, this.state, {\n        clientHeight: document.documentElement.clientHeight\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      clientHeight: document.documentElement.clientHeight // 현재 창의 높이 크기\n\n    });\n    /* 브라우저 창의 크기가 변하는 이벤트를 감지한다. */\n\n    window.addEventListener('resize', this._handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._handleResize);\n  }\n\n  render() {\n    let clientHeight = this.state.clientHeight;\n    const _this$props$post = this.props.post,\n          filelist = _this$props$post.filelist,\n          title = _this$props$post.title,\n          user = _this$props$post.user,\n          created = _this$props$post.created,\n          condition = _this$props$post.condition,\n          description = _this$props$post.description,\n          price = _this$props$post.price;\n    let isPhoto = filelist.length; // filelist에 원소가 하나라도 있으면 true\n\n    const commentList = [{\n      username: '정유호',\n      content: '안 사요.',\n      created: '10시간 전',\n      subCommentList: [{\n        username: '박수근',\n        content: '너무해 ㅠㅠ',\n        created: '21분 전'\n      }, {\n        username: '박수근',\n        content: 'ㅠㅠ',\n        created: '21분 전'\n      }, {\n        username: '박수근',\n        content: 'ㅠㅠ',\n        created: '20분 전'\n      }, {\n        username: '정유호',\n        content: '으...',\n        created: '방금 전'\n      }]\n    }, {\n      username: '황희원',\n      content: '감귤 사세요 !!!!',\n      created: '6시간 전',\n      subCommentList: [{\n        username: '정유호',\n        content: '한라봉도 파나요 ??',\n        created: '3시간 전'\n      }]\n    }, {\n      username: '박수근',\n      content: '기이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이인그으으으으으으으으으으으으으으으으으으으으으으으으으으을',\n      created: '22분 전',\n      subCommentList: [{\n        username: '박수근',\n        content: '기이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이인답그으으으으으으으으으으으으으으으으으으으으으으으으으으을',\n        created: '20분 전'\n      }]\n    }, {\n      username: '박수근',\n      content: '으아아아ㅏㅏ',\n      created: '3분 전'\n    }];\n    return React.createElement(BackgroundDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ContainerDiv, {\n      minHeight: \"\".concat(clientHeight, \"px\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(HeaderBox, {\n      title: title,\n      user: user,\n      created: created,\n      condition: condition,\n      price: price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), isPhoto ? React.createElement(PhotoBox, {\n      filelist: filelist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : '', React.createElement(DescriptionBox, {\n      description: description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(CommentBox, {\n      commentList: commentList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}\n\nBoardDetail.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default BoardDetail;","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/BoardDetail/BoardDetail.js"],"names":["React","Component","styled","PropTypes","HeaderBox","PhotoBox","DescriptionBox","CommentBox","colors","BackgroundDiv","div","gray_bg","ContainerDiv","props","minHeight","white","BoardDetail","state","_handleResize","e","setState","clientHeight","document","documentElement","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","post","filelist","title","user","created","condition","description","price","isPhoto","length","commentList","username","content","subCommentList","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["// 상위 컴포넌트: BoardDetailContainer\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { \n    HeaderBox,\n    PhotoBox,\n    DescriptionBox,\n    CommentBox,\n} from \"./subcomponents\";\n\nimport { colors } from \"../../styles/variables\";\n\n\n/* Styled Components */\n\n/* 배경색을 깔기 위해 만든 div 테그 */\nconst BackgroundDiv = styled.div`\n    width: 100%;\n    background-color: ${colors.gray_bg};\n`;\n\n/*  내용물들을 담을 컨테이너 div 태그\n    최소 높이를 현재 창의 높이로 설정하여, content들이 적어도 화면 전체 높이를 차지 할 수 있도록 함.\n    너비는 전체 가로의 70%만을 차지하는 반응 크기를 사용  */\nconst ContainerDiv = styled.div`\n    width: 70%;\n    min-width: 40rem;\n    min-height: ${props => props.minHeight};\n    margin: 0 auto;\n    padding: 3rem 2rem;\n\n    background-color: ${colors.white};\n\n    /* 그림자 효과 */\n    box-shadow: 0 0 10px rgba(0,0,0,.1);\n`;\n\n\n/* React Component */\n\nclass BoardDetail extends Component {\n\n    state = {}\n\n    componentDidMount() {\n        this.setState({\n            clientHeight: document.documentElement.clientHeight     // 현재 창의 높이 크기\n        })\n\n        /* 브라우저 창의 크기가 변하는 이벤트를 감지한다. */\n        window.addEventListener('resize', this._handleResize) \n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this._handleResize)\n    }\n\n    _handleResize = (e) => {\n        this.setState({\n            ...this.state,\n            clientHeight: document.documentElement.clientHeight\n        })\n    }\n\n    render() {\n        \n        let { clientHeight } = this.state;\n\n        const {\n            /* PhotoBox에 전해줄 속성 */\n            filelist,           // 사진 파일들을 담은 리스트 (array)\n\n            /* TextBox에 전해줄 속성 */\n            title,              // 제목 (string)\n            user,               // 유저 정보 객체 (object)\n            created,            // 생성시간 (string)\n            condition,          // 판매상태 \n            description,        // 상세 \n\n            price,              // Market Post만이 가지고 있는 가격 정보\n\n            /* CommentBox에 전해줄 속성 */\n\n        } = this.props.post;\n\n        let isPhoto = filelist.length;  // filelist에 원소가 하나라도 있으면 true\n\n        const commentList = [\n            {\n                username:'정유호',\n                content:'안 사요.',\n                created:'10시간 전',\n                subCommentList:[\n                    {username: '박수근', content:'너무해 ㅠㅠ', created:'21분 전'},\n                    {username: '박수근', content:'ㅠㅠ', created:'21분 전'},\n                    {username: '박수근', content:'ㅠㅠ', created:'20분 전'},\n                    {username: '정유호', content:'으...', created:'방금 전'}\n                ]\n            },\n            {\n                username:'황희원',\n                content:'감귤 사세요 !!!!',\n                created:'6시간 전',\n                subCommentList:[\n                    {username: '정유호', content:'한라봉도 파나요 ??', created:'3시간 전'}\n                ]\n            },\n            {\n                username:'박수근',\n                content:'기이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이인그으으으으으으으으으으으으으으으으으으으으으으으으으으을',\n                created:'22분 전',\n                subCommentList:[\n                    {username: '박수근', content:'기이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이이인답그으으으으으으으으으으으으으으으으으으으으으으으으으으을', created:'20분 전'}\n                ]\n            },\n            {\n                username:'박수근',\n                content:'으아아아ㅏㅏ',\n                created:'3분 전'\n            }\n        ]\n\n        return (\n            <BackgroundDiv>\n                <ContainerDiv minHeight={`${clientHeight}px`} >\n                    <HeaderBox\n                        title={title}\n                        user={user}\n                        created={created}\n                        condition={condition}\n                        price={price}\n                    />\n                    { isPhoto ? <PhotoBox filelist={filelist} /> : '' }\n                    <DescriptionBox description={description} />\n                    <CommentBox commentList={commentList} />\n                </ContainerDiv>\n            </BackgroundDiv>\n        )\n    }\n}\n\nBoardDetail.propTypes = {\n    post: PropTypes.object.isRequired\n}\n\nexport default BoardDetail;\n"]},"metadata":{},"sourceType":"module"}