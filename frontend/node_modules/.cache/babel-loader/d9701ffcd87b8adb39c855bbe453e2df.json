{"ast":null,"code":"var _jsxFileName = \"/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Structure/Header/Header.js\";\n// 상단 바 (Header) 컴포넌트\n// 로고, 게시판 title, 검색 바(다판다, 잉력시장), 유저 상태(log), 알람표시, 카테고리(잉력시장)\n// 상위 컴포넌트: HeaderContainer\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport SearchBar from \"./SearchBar\";\nimport './Header.css';\nimport logo from './logo-white.png';\n\nclass Header extends Component {\n  render() {\n    const _this$props = this.props,\n          isSearchBarOn = _this$props.isSearchBarOn,\n          isHeaderOn = _this$props.isHeaderOn,\n          isLoggedIn = _this$props.isLoggedIn,\n          isCategoryOn = _this$props.isCategoryOn,\n          topic = _this$props.topic,\n          handleLogout = _this$props.handleLogout,\n          getBoardRequest = _this$props.getBoardRequest;\n    return React.createElement(\"div\", {\n      className: isHeaderOn ? \"Header\" : \"Header hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"LogoContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"logo-Image\",\n      alt: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"EmptyContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"SearchBarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, isSearchBarOn ? React.createElement(SearchBar, {\n      getBoardRequest: getBoardRequest,\n      board: topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : ''), React.createElement(\"div\", {\n      className: \"EmptyContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), isLoggedIn ? React.createElement(\"a\", {\n      onClick: handleLogout,\n      href: \"/\",\n      className: \"LogItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Logout\") : React.createElement(Link, {\n      to: \"/auth/login\",\n      className: \"LogItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Login\"), isCategoryOn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : \"\");\n  }\n\n}\n\nHeader.propTypes = {\n  // Properties\n  isHeaderOn: PropTypes.bool.isRequired,\n  // Header가 나타나는 지,\n  isSearchBarOn: PropTypes.bool.isRequired,\n  // 검색바를 나타낼지,\n  isCategoryOn: PropTypes.bool.isRequired,\n  // 카테고리 창을 나타낼지,\n  isLoggedIn: PropTypes.bool.isRequired,\n  // 로그인 되어있는지,\n  user: PropTypes.object,\n  // 유저 객체\n  topic: PropTypes.string.isRequired,\n  // 무슨 topic 인지 \n  // Methods\n  handleLogout: PropTypes.func.isRequired,\n  // 로그아웃 메서드\n  getBoardRequest: PropTypes.func // board에서 검색 시, get 요청을 하는 매서드 \n\n};\nHeader.defaultProps = {\n  user: {}\n};\nexport default Header;","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Structure/Header/Header.js"],"names":["React","Component","Link","PropTypes","SearchBar","logo","Header","render","props","isSearchBarOn","isHeaderOn","isLoggedIn","isCategoryOn","topic","handleLogout","getBoardRequest","propTypes","bool","isRequired","user","object","string","func","defaultProps"],"mappings":"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","sourcesContent":["// 상단 바 (Header) 컴포넌트\n// 로고, 게시판 title, 검색 바(다판다, 잉력시장), 유저 상태(log), 알람표시, 카테고리(잉력시장)\n\n// 상위 컴포넌트: HeaderContainer\n\nimport React, {Component} from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport SearchBar from \"./SearchBar\";\nimport './Header.css'\nimport logo from './logo-white.png';\n\nclass Header extends Component {\n\n    render() {\n\n        const { \n            isSearchBarOn,\n            isHeaderOn,\n            isLoggedIn,\n            isCategoryOn,\n            topic,\n\n            handleLogout,\n            getBoardRequest\n        } = this.props;\n\n        return (\n            <div className={\n                isHeaderOn ?\n                \"Header\" :\n                \"Header hidden\"\n            }>\n                <div className=\"LogoContainer\">\n                    <Link to=\"/\"><img src={logo} className=\"logo-Image\" alt=\"Home\" /></Link>\n                </div>\n\n                <div className=\"EmptyContainer\"></div>\n                \n                <div className=\"SearchBarContainer\">\n                    {\n                        isSearchBarOn ?\n                        <SearchBar \n                            getBoardRequest={getBoardRequest} \n                            board={topic}\n                        /> :\n                        ''\n                    }\n                </div>\n\n                <div className=\"EmptyContainer\"></div>\n\n                {\n                    isLoggedIn ? \n                    <a onClick={handleLogout} href='/' className='LogItem'>Logout</a> : \n                    <Link to='/auth/login' className='LogItem'>Login</Link>\n                }\n                {\n                    isCategoryOn ?\n                    <div></div> :\n                    \"\"\n                }\n            </div>\n        )\n    }\n}\n\nHeader.propTypes = {\n    // Properties\n    isHeaderOn: PropTypes.bool.isRequired,      // Header가 나타나는 지,\n    isSearchBarOn: PropTypes.bool.isRequired,   // 검색바를 나타낼지,\n    isCategoryOn: PropTypes.bool.isRequired,    // 카테고리 창을 나타낼지,\n    isLoggedIn: PropTypes.bool.isRequired,      // 로그인 되어있는지,\n    user: PropTypes.object,                     // 유저 객체\n    topic: PropTypes.string.isRequired,         // 무슨 topic 인지 \n\n    // Methods\n    handleLogout: PropTypes.func.isRequired,    // 로그아웃 메서드\n    getBoardRequest: PropTypes.func,            // board에서 검색 시, get 요청을 하는 매서드 \n}\n\nHeader.defaultProps = {\n    user: {}\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}