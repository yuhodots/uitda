{"ast":null,"code":"var _jsxFileName = \"/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Board/PostCard/PostCard.js\";\n//\n// 상위 컴포넌트: components/Board\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { MarketCard, FakeCard } from \"./Cards\";\nimport './PostCard.css';\n\nclass PostCard extends Component {\n  _renderCard() {\n    let isMarketCard;\n\n    switch (this.props.boardName) {\n      case 'market':\n        isMarketCard = true;\n        break;\n\n      case 'networking':\n        isMarketCard = false;\n        break;\n\n      default:\n        break;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, isMarketCard ? React.createElement(MarketCard, {\n      id: this.props.id,\n      title: this.props.title,\n      user: this.props.user,\n      created: this.props.created,\n      description: this.props.description,\n      condition: this.props.condition,\n      filelist: this.props.filelist,\n      boardName: this.props.boardName,\n      price: this.props.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(MarketCard, {\n      id: this.props.id,\n      title: this.props.title,\n      user: this.props.user,\n      created: this.props.created,\n      description: this.props.description,\n      condition: this.props.condition,\n      filelist: this.props.filelist,\n      boardName: this.props.boardName,\n      price: this.props.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"PostCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.isFake ? React.createElement(FakeCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : this._renderCard());\n  }\n\n}\n\nPostCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  // 포스팅 카드가 DB에 저장된 id\n  title: PropTypes.string.isRequired,\n  // 제목\n  user: PropTypes.object.isRequired,\n  // 작성자 정보 객체\n  created: PropTypes.string.isRequired,\n  // 작성일 정보\n  condition: PropTypes.string,\n  // 게시글의 상태 정보 (판매 중, 거래 완료 ...)\n  description: PropTypes.string,\n  // 상세 정보\n  filelist: PropTypes.array,\n  // 사진 데이터 리스트\n  boardName: PropTypes.string.isRequired,\n  // 무슨 보드인지\n  isFake: PropTypes.bool.isRequired,\n  // fake 카드인지\n  price: PropTypes.string // [market] 가격 정보\n\n};\nPostCard.defaultProps = {\n  description: '',\n  filelist: [],\n  price: '',\n  condition: ''\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Board/PostCard/PostCard.js"],"names":["React","Component","PropTypes","MarketCard","FakeCard","PostCard","_renderCard","isMarketCard","props","boardName","id","title","user","created","description","condition","filelist","price","render","isFake","propTypes","number","isRequired","string","object","array","bool","defaultProps"],"mappings":"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","sourcesContent":["//\n\n// 상위 컴포넌트: components/Board\n\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport { MarketCard, FakeCard } from \"./Cards\";\nimport './PostCard.css';\n\nclass PostCard extends Component {\n\n    _renderCard() {\n\n        let isMarketCard;\n        \n        switch (this.props.boardName) {\n            case 'market':\n                isMarketCard = true;\n                break;\n        \n            case 'networking':\n                isMarketCard = false;\n                break;\n\n            default:\n                break;\n        }\n\n        return (\n            <div>\n                { \n                    isMarketCard ?\n                    <MarketCard\n                        id = {this.props.id}\n                        title = {this.props.title}\n                        user = {this.props.user}\n                        created = {this.props.created}\n                        description = {this.props.description}\n                        condition = {this.props.condition}\n                        filelist = {this.props.filelist}\n                        boardName = {this.props.boardName}\n\n                        price = {this.props.price}\n                    /> :\n                    <MarketCard\n                        id = {this.props.id}\n                        title = {this.props.title}\n                        user = {this.props.user}\n                        created = {this.props.created}\n                        description = {this.props.description}\n                        condition = {this.props.condition}\n                        filelist = {this.props.filelist}\n                        boardName = {this.props.boardName}\n\n                        price = {this.props.price}\n                    />\n                }\n            </div>   \n        )\n    }\n\n    render() {\n        return (\n            <div className=\"PostCard\">\n                {\n                    this.props.isFake ?\n                    <FakeCard/> :\n                    this._renderCard()\n                }\n            </div>\n        )\n    }\n}\n\nPostCard.propTypes = {\n    id: PropTypes.number.isRequired,        // 포스팅 카드가 DB에 저장된 id\n    title: PropTypes.string.isRequired,     // 제목\n    user: PropTypes.object.isRequired,      // 작성자 정보 객체\n    created: PropTypes.string.isRequired,   // 작성일 정보\n    condition: PropTypes.string,            // 게시글의 상태 정보 (판매 중, 거래 완료 ...)\n    description: PropTypes.string,          // 상세 정보\n    filelist: PropTypes.array,              // 사진 데이터 리스트\n    boardName: PropTypes.string.isRequired, // 무슨 보드인지\n    isFake: PropTypes.bool.isRequired,      // fake 카드인지\n\n    price: PropTypes.string,                // [market] 가격 정보\n}\n\nPostCard.defaultProps = {\n    description: '',\n    filelist: [],\n    price: '',\n    condition: ''\n}\n\n\nexport default PostCard"]},"metadata":{},"sourceType":"module"}