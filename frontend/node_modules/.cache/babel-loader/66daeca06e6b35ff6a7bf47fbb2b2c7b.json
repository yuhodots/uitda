{"ast":null,"code":"var _jsxFileName = \"/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Structure/Header/SearchBar/SearchBar.js\";\n// 상위 컴포넌트: compoents/Structure/Header\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      keyword: ''\n      /* 검색 버튼 클릭 시, get board 요청을 보냄 */\n\n    };\n\n    this._handleClick = () => {\n      const _this$props = this.props,\n            board = _this$props.board,\n            getBoardRequest = _this$props.getBoardRequest;\n      getBoardRequest(board, 0, this.state.keyword);\n    };\n\n    this._handleInput = e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    };\n\n    this._handleEnter = e => {\n      if (e.keyCode === 13) {\n        this._handleClick();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Search-Bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this._handleInput,\n      onKeyDown: this._handleEnter,\n      className: \"Search-TextArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: this._handleClick,\n      className: \"SearchBotton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\uAC80\\uC0C9\"));\n  }\n\n}\n\nSearchBar.propTypes = {\n  board: PropTypes.string.isRequired,\n  // 무슨 board인지\n  getBoardRequest: PropTypes.func.isRequired // board get 요청 액션 메서드\n\n};\nexport default SearchBar;","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/Structure/Header/SearchBar/SearchBar.js"],"names":["React","Component","PropTypes","SearchBar","state","keyword","_handleClick","props","board","getBoardRequest","_handleInput","e","setState","target","value","_handleEnter","keyCode","render","propTypes","string","isRequired","func"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BG,KAF8B,GAEtB;AACJC,MAAAA,OAAO,EAAE;AAGb;;AAJQ,KAFsB;;AAAA,SAO9BC,YAP8B,GAOf,MAAM;AAAA,0BAIb,KAAKC,KAJQ;AAAA,YAEbC,KAFa,eAEbA,KAFa;AAAA,YAGbC,eAHa,eAGbA,eAHa;AAMjBA,MAAAA,eAAe,CAACD,KAAD,EAAQ,CAAR,EAAW,KAAKJ,KAAL,CAAWC,OAAtB,CAAf;AACH,KAd6B;;AAAA,SAiB9BK,YAjB8B,GAiBdC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACVP,QAAAA,OAAO,EAAEM,CAAC,CAACE,MAAF,CAASC;AADR,OAAd;AAGH,KArB6B;;AAAA,SAwB9BC,YAxB8B,GAwBdJ,CAAD,IAAO;AAClB,UAAIA,CAAC,CAACK,OAAF,KAAc,EAAlB,EAAsB;AAClB,aAAKV,YAAL;AACH;AACJ,KA5B6B;AAAA;;AA8B9BW,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAE,KAAKP,YAFnB;AAGI,MAAA,SAAS,EAAE,KAAKK,YAHpB;AAII,MAAA,SAAS,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI;AAAK,MAAA,OAAO,EAAE,KAAKT,YAAnB;AAAiC,MAAA,SAAS,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,CADJ;AAWH;;AA1C6B;;AA6ClCH,SAAS,CAACe,SAAV,GAAsB;AAClBV,EAAAA,KAAK,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UADN;AAC8B;AAEhDX,EAAAA,eAAe,EAAEP,SAAS,CAACmB,IAAV,CAAeD,UAHd,CAG8B;;AAH9B,CAAtB;AAMA,eAAejB,SAAf","sourcesContent":["// 상위 컴포넌트: compoents/Structure/Header\n\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n\n    state = {\n        keyword: ''\n    }\n    \n    /* 검색 버튼 클릭 시, get board 요청을 보냄 */\n    _handleClick = () => {\n        const {\n            board,\n            getBoardRequest\n        } = this.props;\n\n        getBoardRequest(board, 0, this.state.keyword);\n    }\n\n    /* 검색창에 입력 시, state에 검색 값을 저장 */\n    _handleInput = (e) => {\n        this.setState({\n            keyword: e.target.value\n        })\n    }\n\n    /* 검색창에서 enter키 누르면 _handleClick이 실행되게 함 */\n    _handleEnter = (e) => {\n        if (e.keyCode === 13) {\n            this._handleClick();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Search-Bar\">\n                <input \n                    type='text' \n                    onChange={this._handleInput} \n                    onKeyDown={this._handleEnter}\n                    className=\"Search-TextArea\" \n                />\n                <div onClick={this._handleClick} className=\"SearchBotton\">검색</div>\n            </div>\n        )\n    }\n}\n\nSearchBar.propTypes = {\n    board: PropTypes.string.isRequired,             // 무슨 board인지\n\n    getBoardRequest: PropTypes.func.isRequired,     // board get 요청 액션 메서드\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}