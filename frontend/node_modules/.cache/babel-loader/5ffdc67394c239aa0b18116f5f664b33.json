{"ast":null,"code":"var _jsxFileName = \"/Users/soogeun/Documents/GitHub/Uitda-Soogeun-WorkSpace/frontend/src/components/Board/PostCard/PostCard.js\";\n//\n// 상위 컴포넌트: components/Board\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { BasicCard, FakeCard } from \"./Cards\";\nimport './PostCard.css';\n\nclass PostCard extends Component {\n  _renderCard() {\n    return React.createElement(BasicCard, {\n      id: this.props.id,\n      title: this.props.title,\n      user: this.props.user,\n      created: this.props.created,\n      description: this.props.description,\n      condition: this.props.condition,\n      filelist: this.props.filelist,\n      price: this.props.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"PostCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.isFake ? React.createElement(FakeCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : this._renderCard());\n  }\n\n}\n\nPostCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  // 포스팅 카드가 DB에 저장된 id\n  title: PropTypes.string.isRequired,\n  // 제목\n  user: PropTypes.object.isRequired,\n  // 작성자 정보 객체\n  created: PropTypes.string.isRequired,\n  // 작성일 정보\n  condition: PropTypes.string,\n  // 게시글의 상태 정보 (판매 중, 거래 완료 ...)\n  description: PropTypes.string,\n  // 상세 정보\n  filelist: PropTypes.array,\n  // 사진 데이터 리스트\n  isFake: PropTypes.bool.isRequired,\n  // fake 카드인지\n  price: PropTypes.string // [market] 가격 정보\n\n};\nPostCard.defaultProps = {\n  description: '',\n  filelist: [],\n  price: '',\n  condition: ''\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/Uitda-Soogeun-WorkSpace/frontend/src/components/Board/PostCard/PostCard.js"],"names":["React","Component","PropTypes","BasicCard","FakeCard","PostCard","_renderCard","props","id","title","user","created","description","condition","filelist","price","render","isFake","propTypes","number","isRequired","string","object","array","bool","defaultProps"],"mappings":";AAAA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,SAApC;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,WAAW,GAAG;AACV,WACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAI,KAAKC,KAAL,CAAWC,EADrB;AAEI,MAAA,KAAK,EAAI,KAAKD,KAAL,CAAWE,KAFxB;AAGI,MAAA,IAAI,EAAI,KAAKF,KAAL,CAAWG,IAHvB;AAII,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWI,OAJ1B;AAKI,MAAA,WAAW,EAAI,KAAKJ,KAAL,CAAWK,WAL9B;AAMI,MAAA,SAAS,EAAI,KAAKL,KAAL,CAAWM,SAN5B;AAOI,MAAA,QAAQ,EAAI,KAAKN,KAAL,CAAWO,QAP3B;AASI,MAAA,KAAK,EAAI,KAAKP,KAAL,CAAWQ,KATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAaH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKT,KAAL,CAAWU,MAAX,GACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,KAAKX,WAAL,EAJR,CADJ;AASH;;AA5B4B;;AA+BjCD,QAAQ,CAACa,SAAT,GAAqB;AACjBV,EAAAA,EAAE,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UADJ;AACuB;AACxCX,EAAAA,KAAK,EAAEP,SAAS,CAACmB,MAAV,CAAiBD,UAFP;AAEuB;AACxCV,EAAAA,IAAI,EAAER,SAAS,CAACoB,MAAV,CAAiBF,UAHN;AAGuB;AACxCT,EAAAA,OAAO,EAAET,SAAS,CAACmB,MAAV,CAAiBD,UAJT;AAIuB;AACxCP,EAAAA,SAAS,EAAEX,SAAS,CAACmB,MALJ;AAKuB;AACxCT,EAAAA,WAAW,EAAEV,SAAS,CAACmB,MANN;AAMuB;AACxCP,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,KAPH;AAOuB;AACxCN,EAAAA,MAAM,EAAEf,SAAS,CAACsB,IAAV,CAAeJ,UARN;AAQuB;AAExCL,EAAAA,KAAK,EAAEb,SAAS,CAACmB,MAVA,CAUuB;;AAVvB,CAArB;AAaAhB,QAAQ,CAACoB,YAAT,GAAwB;AACpBb,EAAAA,WAAW,EAAE,EADO;AAEpBE,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBF,EAAAA,SAAS,EAAE;AAJS,CAAxB;AAQA,eAAeR,QAAf","sourcesContent":["//\n\n// 상위 컴포넌트: components/Board\n\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport { BasicCard, FakeCard } from \"./Cards\";\nimport './PostCard.css';\n\nclass PostCard extends Component {\n\n    _renderCard() {\n        return (\n            <BasicCard\n                id = {this.props.id}\n                title = {this.props.title}\n                user = {this.props.user}\n                created = {this.props.created}\n                description = {this.props.description}\n                condition = {this.props.condition}\n                filelist = {this.props.filelist}\n\n                price = {this.props.price}\n            />\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"PostCard\">\n                {\n                    this.props.isFake ?\n                    <FakeCard/> :\n                    this._renderCard()\n                }\n            </div>\n        )\n    }\n}\n\nPostCard.propTypes = {\n    id: PropTypes.number.isRequired,        // 포스팅 카드가 DB에 저장된 id\n    title: PropTypes.string.isRequired,     // 제목\n    user: PropTypes.object.isRequired,      // 작성자 정보 객체\n    created: PropTypes.string.isRequired,   // 작성일 정보\n    condition: PropTypes.string,            // 게시글의 상태 정보 (판매 중, 거래 완료 ...)\n    description: PropTypes.string,          // 상세 정보\n    filelist: PropTypes.array,              // 사진 데이터 리스트\n    isFake: PropTypes.bool.isRequired,      // fake 카드인지\n\n    price: PropTypes.string,                // [market] 가격 정보\n}\n\nPostCard.defaultProps = {\n    description: '',\n    filelist: [],\n    price: '',\n    condition: ''\n}\n\n\nexport default PostCard"]},"metadata":{},"sourceType":"module"}