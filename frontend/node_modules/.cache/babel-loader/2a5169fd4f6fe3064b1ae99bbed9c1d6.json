{"ast":null,"code":"var _jsxFileName = \"/Users/soogeun/Documents/Uitda/uitda-test/frontend/src/containers/NetworkContainer.js\";\n// Network Board 컴포넌트의 액션이 담긴 컨테이너 컴포넌트\n// 상위 컴포넌트: pages/Network\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux'; // 컴포넌트\n\nimport HeaderContainer from \"./HeaderContainer\";\nimport SearchIcon from \"../components/Structure/SearchIcon\"; // 액션\n\nimport { getNetworkRequest } from \"../store/actions/network\";\nimport { headerOn, searchBarOn, categoryOn } from \"../store/actions/structure\";\n\nclass NetworkingContainer extends Component {\n  componentDidMount() {\n    this.props.headerOn();\n    this.props.searchBarOn();\n    this.props.categoryOn();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(HeaderContainer, {\n      title: \"Networking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(SearchIcon, {\n      isHeaderOn: this.props.isHeaderOn,\n      headerOn: this.props.headerOn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isHeaderOn: state.structure.isHeaderOn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getNetworkRequest: () => {\n      dispatch(getNetworkRequest());\n    },\n    // Network Board 데이터를 받아오는 메서드\n    headerOn: () => {\n      dispatch(headerOn());\n    },\n    searchBarOn: () => {\n      dispatch(searchBarOn());\n    },\n    categoryOn: () => {\n      dispatch(categoryOn());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NetworkingContainer);","map":{"version":3,"sources":["/Users/soogeun/Documents/Uitda/uitda-test/frontend/src/containers/NetworkContainer.js"],"names":["React","Component","connect","HeaderContainer","SearchIcon","getNetworkRequest","headerOn","searchBarOn","categoryOn","NetworkingContainer","componentDidMount","props","render","isHeaderOn","mapStateToProps","state","structure","mapDispatchToProps","dispatch"],"mappings":";AAAA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CAEA;;AACA,SACIC,iBADJ,QAEO,0BAFP;AAIA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,UAHJ,QAIO,4BAJP;;AAMA,MAAMC,mBAAN,SAAkCR,SAAlC,CAA4C;AAExCS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,QAAX;AACA,SAAKK,KAAL,CAAWJ,WAAX;AACA,SAAKI,KAAL,CAAWH,UAAX;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACI,MAAA,KAAK,EAAC,YADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,UAAD;AACI,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAD3B;AAEI,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWL,QAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AAtBuC;;AAyB5C,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,UAAU,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AADzB,GAAP;AAGH,CAJD;;AAMA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHb,IAAAA,iBAAiB,EAAE,MAAM;AAACa,MAAAA,QAAQ,CAACb,iBAAiB,EAAlB,CAAR;AAA8B,KADrD;AACyD;AAE5DC,IAAAA,QAAQ,EAAE,MAAM;AAACY,MAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AAAqB,KAHnC;AAIHC,IAAAA,WAAW,EAAE,MAAM;AAACW,MAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AAAwB,KAJzC;AAKHC,IAAAA,UAAU,EAAE,MAAM;AAACU,MAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AAAuB;AALvC,GAAP;AAOH,CARD;;AAUA,eAAeN,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,mBAA7C,CAAf","sourcesContent":["// Network Board 컴포넌트의 액션이 담긴 컨테이너 컴포넌트\n\n// 상위 컴포넌트: pages/Network\n\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\n// 컴포넌트\nimport HeaderContainer from \"./HeaderContainer\";\nimport SearchIcon from \"../components/Structure/SearchIcon\";\n\n// 액션\nimport {\n    getNetworkRequest\n} from \"../store/actions/network\"\n\nimport { \n    headerOn,\n    searchBarOn,\n    categoryOn\n} from \"../store/actions/structure\";\n\nclass NetworkingContainer extends Component {    \n\n    componentDidMount() {\n        this.props.headerOn();\n        this.props.searchBarOn();\n        this.props.categoryOn();\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderContainer\n                    title='Networking'\n                />\n\n\n                <SearchIcon\n                    isHeaderOn={this.props.isHeaderOn}\n                    headerOn={this.props.headerOn}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isHeaderOn: state.structure.isHeaderOn\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getNetworkRequest: () => {dispatch(getNetworkRequest())},   // Network Board 데이터를 받아오는 메서드\n\n        headerOn: () => {dispatch(headerOn())},\n        searchBarOn: () => {dispatch(searchBarOn())},\n        categoryOn: () => {dispatch(categoryOn())}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NetworkingContainer);"]},"metadata":{},"sourceType":"module"}