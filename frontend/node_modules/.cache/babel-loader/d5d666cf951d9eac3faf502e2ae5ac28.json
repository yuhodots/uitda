{"ast":null,"code":"import _defineProperty from \"/Users/soogeun/Documents/GitHub/uitda/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/soogeun/Documents/GitHub/uitda/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/BoardDetail/subcomponents/PhotoBox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 2.5rem;\\n    height: 2.5rem;\\n    margin: 0 0.5rem;\\n    border-radius: 0.5rem;\\n\\n    cursor: pointer;\\n    transition: all 0.3s;\\n    \\n    background-image: \", \";\\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: cover;\\n\\n    \\n    border: \", \";\\n    opacity: \", \";\\n    box-shadow: \", \";\\n\"]);\n\n  _templateObject8 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 32rem;\\n    height: 5rem;\\n    padding-top: 1rem;\\n    margin: 0 auto;\\n\\n    /* box-shadow: 0 0 3px rgba(0,0,0,.4); */\\n\\n    display: flex;\\n    flex-flow: row nowrap;\\n    justify-content: center;\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    flex: 1;\\n    cursor: pointer;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    top: 0;\\n\\n    display: flex;\\n    flex-flow: row nowrap;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 100%;\\n\\n    /* transition: background-image 0.3s; */\\n\\n    background-image: \", \";\\n    background-repeat: no-repeat;\\n    background-position: center center;\\n    background-size: contain;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    flex: 1;\\n\\n    position: relative;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n\\n    display: flex;\\n    flex-flow: column nowrap;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    margin-top: 2rem;\\n    width: 100%;\\n    padding-top: 60%;\\n    border-bottom: 1px solid \", \";\\n\\n    position: relative;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n// 상위 컴포넌트: components/BoardDetail/BoradDetail.js\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { colors } from \"../../../styles/variables\";\n/* Styled Components */\n\n/* 사진 Box 전체 영역 div \n   padding을 통해 가로길이에 비례한 세로길이 설정 및\n   position: relative; 로, 자식의 position의 기준이 됨 */\n\nconst BoxArea = styled.div(_templateObject(), colors.gray_bg);\n/* position: absolute; 와 width, height, top 설정을 통해,\n   실제 내용물을 담을 수 있는 컨테이너 역할을 수행하는 div 태그 이다.\n   PhotoAndButtonDiv + SmallPhotoList 인 flex-box */\n\nconst BoxContainer = styled.div(_templateObject2());\n/* PhotoContainer + 앞 뒤 버튼 인 flex-box \n   flex: 1; 을 통해, 세로 길이가 아래의 리스트 영역을 제외한 크기로 설정 */\n\nconst PhotoAndButtonDiv = styled.div(_templateObject3());\n/* 사진을 담는 영역.\n   size를 contain으로 설정하여, 원본 사이즈 비율을 유지하되 영역을 벗어나지 않게 함 */\n\nconst PhotoContainer = styled.div(_templateObject4(), props => {\n  return \"url(\".concat(props.imgURL, \")\");\n});\n/* prev, next 버튼을 담는 flex box\n   absolute position을 이용해, 사진 영역을 덮음 */\n\nconst ButtonDiv = styled.div(_templateObject5());\n/* prev, next 버튼 */\n\nconst Button = styled.div(_templateObject6());\n/* 사진 리스트 영역에 대한 div 태그\n   9개까지 담을 수 있는 크기.\n   [ 9개 이상의 사진일 때, 넘어가는 기능 추가해야 함 ] */\n\nconst SmallPhotoList = styled.div(_templateObject7());\n/* 조그마한 사진 */\n\nconst SmallPhoto = styled.div(_templateObject8(), props => {\n  return \"url(\".concat(props.imgURL, \")\");\n}, props => {\n  return props.isActivate ? 'solid 1px black' : 'none';\n}, props => {\n  return props.isActivate ? '1' : '0.5';\n}, props => {\n  return props.isActivate ? '0 0 3px rgba(0,0,0,.4);' : '';\n});\n/* React Component */\n\nclass PhotoBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photoOrder: 0 // 리스트에서 현재 사진의 인덱스 값\n\n      /* prev 버튼 핸들러 함수\n         photoOrder 값을 1 줄인다. (나머지 연산자 이용) */\n\n    };\n\n    this._handlePrevBtn = () => {\n      let numOfPhotos = this.props.filelist.length;\n      this.setState(_objectSpread({}, this.state, {\n        photoOrder: (this.state.photoOrder + numOfPhotos - 1) % numOfPhotos\n      }));\n    };\n\n    this._handleNextBtn = () => {\n      let numOfPhotos = this.props.filelist.length;\n      this.setState(_objectSpread({}, this.state, {\n        photoOrder: (this.state.photoOrder + 1) % numOfPhotos\n      }));\n    };\n\n    this._handlePhotoBtn = (e, idx) => {\n      this.setState(_objectSpread({}, this.state, {\n        photoOrder: idx\n      }));\n    };\n\n    this._renderSmallPhoto = filelist => {\n      return filelist.map((photo, idx) => {\n        let isActivate = idx === this.state.photoOrder;\n        return React.createElement(SmallPhoto, {\n          imgURL: photo.location,\n          onClick: e => this._handlePhotoBtn(e, idx),\n          isActivate: isActivate,\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    const filelist = this.props.filelist;\n    const photoOrder = this.state.photoOrder;\n    return React.createElement(BoxArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(BoxContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(PhotoAndButtonDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(PhotoContainer, {\n      imgURL: filelist[photoOrder].location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(ButtonDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this._handlePrevBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this._handleNextBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(SmallPhotoList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this._renderSmallPhoto(filelist))));\n  }\n\n}\n\nPhotoBox.propTypes = {\n  filelist: PropTypes.array.isRequired // 사진 데이터를 담은 array\n\n};\nexport default PhotoBox;","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/uitda/frontend/src/components/BoardDetail/subcomponents/PhotoBox.js"],"names":["React","Component","styled","PropTypes","colors","BoxArea","div","gray_bg","BoxContainer","PhotoAndButtonDiv","PhotoContainer","props","imgURL","ButtonDiv","Button","SmallPhotoList","SmallPhoto","isActivate","PhotoBox","state","photoOrder","_handlePrevBtn","numOfPhotos","filelist","length","setState","_handleNextBtn","_handlePhotoBtn","e","idx","_renderSmallPhoto","map","photo","location","render","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["// 상위 컴포넌트: components/BoardDetail/BoradDetail.js\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { colors } from \"../../../styles/variables\";\n\n\n/* Styled Components */\n\n/* 사진 Box 전체 영역 div \n   padding을 통해 가로길이에 비례한 세로길이 설정 및\n   position: relative; 로, 자식의 position의 기준이 됨 */\nconst BoxArea = styled.div`\n    margin-top: 2rem;\n    width: 100%;\n    padding-top: 60%;\n    border-bottom: 1px solid ${colors.gray_bg};\n\n    position: relative;\n`;\n\n/* position: absolute; 와 width, height, top 설정을 통해,\n   실제 내용물을 담을 수 있는 컨테이너 역할을 수행하는 div 태그 이다.\n   PhotoAndButtonDiv + SmallPhotoList 인 flex-box */\nconst BoxContainer = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n\n    display: flex;\n    flex-flow: column nowrap;\n`;\n\n/* PhotoContainer + 앞 뒤 버튼 인 flex-box \n   flex: 1; 을 통해, 세로 길이가 아래의 리스트 영역을 제외한 크기로 설정 */\nconst PhotoAndButtonDiv = styled.div`\n    width: 100%;\n    flex: 1;\n\n    position: relative;\n`;\n\n/* 사진을 담는 영역.\n   size를 contain으로 설정하여, 원본 사이즈 비율을 유지하되 영역을 벗어나지 않게 함 */\nconst PhotoContainer = styled.div`\n    height: 100%;\n\n    /* transition: background-image 0.3s; */\n\n    background-image: ${props => {\n        return `url(${props.imgURL})`;\n    }};\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: contain;\n`;\n\n/* prev, next 버튼을 담는 flex box\n   absolute position을 이용해, 사진 영역을 덮음 */\nconst ButtonDiv = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n\n    display: flex;\n    flex-flow: row nowrap;\n`;\n\n/* prev, next 버튼 */\nconst Button = styled.div`\n    flex: 1;\n    cursor: pointer;\n`;\n\n/* 사진 리스트 영역에 대한 div 태그\n   9개까지 담을 수 있는 크기.\n   [ 9개 이상의 사진일 때, 넘어가는 기능 추가해야 함 ] */\nconst SmallPhotoList = styled.div`\n    width: 32rem;\n    height: 5rem;\n    padding-top: 1rem;\n    margin: 0 auto;\n\n    /* box-shadow: 0 0 3px rgba(0,0,0,.4); */\n\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n`;\n\n/* 조그마한 사진 */\nconst SmallPhoto = styled.div`\n    width: 2.5rem;\n    height: 2.5rem;\n    margin: 0 0.5rem;\n    border-radius: 0.5rem;\n\n    cursor: pointer;\n    transition: all 0.3s;\n    \n    background-image: ${props => {\n        return `url(${props.imgURL})`\n    }};\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: cover;\n\n    \n    border: ${props => {\n        return props.isActivate ? 'solid 1px black' : 'none'\n    }};\n    opacity: ${props => {\n        return props.isActivate ? '1' : '0.5'\n    }};\n    box-shadow: ${props => {\n        return props.isActivate ? '0 0 3px rgba(0,0,0,.4);' : ''\n    }};\n`;\n\n/* React Component */\n\nclass PhotoBox extends Component {\n\n    state = {\n        photoOrder: 0   // 리스트에서 현재 사진의 인덱스 값\n    }\n\n    /* prev 버튼 핸들러 함수\n       photoOrder 값을 1 줄인다. (나머지 연산자 이용) */\n    _handlePrevBtn = () => {\n        let numOfPhotos = this.props.filelist.length;\n\n        this.setState({\n            ...this.state,\n            photoOrder: (this.state.photoOrder + numOfPhotos - 1) % numOfPhotos \n        })\n    }\n\n    /* next 버튼 핸들러 함수\n       photoOrder 값을 1 증가시킨다. (나머지 연산자 이용) */\n    _handleNextBtn = () => {\n        let numOfPhotos = this.props.filelist.length;\n\n        this.setState({\n            ...this.state,\n            photoOrder: (this.state.photoOrder + 1) % numOfPhotos \n        })\n    }\n\n    /* photoList의 photo 버튼 헨들러 함수.\n       사진을 클릭하면 해당 사진이 큰 화면에 출력되도록 함. */\n    _handlePhotoBtn = (e, idx) => {\n        this.setState({\n            ...this.state,\n            photoOrder: idx \n        })\n    }\n\n    _renderSmallPhoto = (filelist) => {\n        return filelist.map((photo, idx) => {\n            let isActivate = idx === this.state.photoOrder;\n            return (\n                <SmallPhoto\n                    imgURL={photo.location}\n                    onClick={(e) => this._handlePhotoBtn(e, idx)}\n                    isActivate={isActivate}\n                    key={idx}\n                />\n            )\n        })\n    }\n\n    render() {\n        const { filelist } = this.props;\n        const { photoOrder } = this.state;\n\n        return (\n            <BoxArea>\n                <BoxContainer>\n                    <PhotoAndButtonDiv>\n                        <PhotoContainer \n                            imgURL={filelist[photoOrder].location} \n                        />\n                        <ButtonDiv>\n                            <Button onClick={this._handlePrevBtn} />\n                            <Button onClick={this._handleNextBtn} />\n                        </ButtonDiv>\n                    </PhotoAndButtonDiv>\n                    <SmallPhotoList>\n                        {this._renderSmallPhoto(filelist)}\n                    </SmallPhotoList>\n                </BoxContainer>\n            </BoxArea>\n        )\n    }\n}\n\nPhotoBox.propTypes = {\n    filelist: PropTypes.array.isRequired    // 사진 데이터를 담은 array\n}\n\nexport default PhotoBox"]},"metadata":{},"sourceType":"module"}