{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yuho8437/Documents/GitHub/uitda/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yuho8437/Documents/GitHub/uitda/frontend/src/components/BoardDetail/subcomponents/CommentBox.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    padding-bottom: 1.5rem;\\n    margin-bottom: 1.5rem;\\n    border-bottom: 1px solid \", \";\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    margin-bottom: 1.5rem;\\n\\n    height: 2rem;\\n    line-height: 2rem;\\n    font-size: 1.5rem;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    padding: 1.5rem 1rem;\\n    background-color: \", \";\\n    border-radius: 8px;\\n    width: 100%;\\n    min-height: 10rem;\\n    position: relative;\\n\\n    display: flex;\\n    flex-direction: column;\\n    flex-wrap: nowrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n// 상위 컴포넌트: components/BoardDetail.js\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport CommentItem from './CommentItem';\nimport CommentInput from './CommentInput';\nimport { colors } from \"../../../styles/variables\";\n/* Styled Components */\n\n/* CommentBox 영역 div */\n\nconst CommentArea = styled.div(_templateObject(), colors.gray_bg);\n/* 댓글 갯수의 정보 + 작성자에게 메시지 보내기 링크 태그 */\n\nconst CommentHeader = styled.div(_templateObject2());\n/* CommentInput 아래에 margin과 흰색 마감 선을 넣을 것임 */\n\nconst BottomOfInputDiv = styled.div(_templateObject3(), colors.white); /////////////////////////////////////////\n\n/* React Components */\n\nclass CommentBox extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._renderComments = commentList => {\n      return commentList.map((comment, idx) => {\n        const username = comment.username,\n              content = comment.content,\n              created = comment.created,\n              subCommentList = comment.subCommentList;\n        return React.createElement(CommentItem, {\n          username: username,\n          content: content,\n          created: created,\n          subCommentList: subCommentList,\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  // 더보기 상태 (isMoreSee) 추가\n  componentDidMount() {} // map을 이용해 array 데이터를 render하는 함수\n\n\n  render() {\n    const commentList = this.props.commentList;\n    const numOfComments = commentList.length;\n    return React.createElement(CommentArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CommentHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, numOfComments, \" \\uAC1C\\uC758 \\uB313\\uAE00\"), React.createElement(CommentInput, {\n      isSubComment: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(BottomOfInputDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), numOfComments ? this._renderComments(commentList) : '아직 댓글이 없습니다.');\n  }\n\n}\n\nCommentBox.propTypes = {\n  commentList: PropTypes.array // 댓글 데이터를 가지고 있는 array\n\n};\nCommentBox.defaultProps = {\n  commentList: []\n};\nexport default CommentBox;","map":{"version":3,"sources":["/Users/yuho8437/Documents/GitHub/uitda/frontend/src/components/BoardDetail/subcomponents/CommentBox.js"],"names":["React","Component","styled","PropTypes","CommentItem","CommentInput","colors","CommentArea","div","gray_bg","CommentHeader","BottomOfInputDiv","white","CommentBox","_renderComments","commentList","map","comment","idx","username","content","created","subCommentList","componentDidMount","render","props","numOfComments","length","propTypes","array","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAEA;;AAEA;;AACA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAV,oBAEOF,MAAM,CAACG,OAFd,CAAjB;AAaA;;AACA,MAAMC,aAAa,GAAGR,MAAM,CAACM,GAAV,oBAAnB;AASA;;AACA,MAAMG,gBAAgB,GAAGT,MAAM,CAACM,GAAV,qBAISF,MAAM,CAACM,KAJhB,CAAtB,C,CAOA;;AAEA;;AAEA,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAQ/Ba,eAR+B,GAQZC,WAAD,IAAiB;AAC/B,aAAOA,WAAW,CAACC,GAAZ,CAAgB,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAAA,cAEjCC,QAFiC,GAMjCF,OANiC,CAEjCE,QAFiC;AAAA,cAGjCC,OAHiC,GAMjCH,OANiC,CAGjCG,OAHiC;AAAA,cAIjCC,OAJiC,GAMjCJ,OANiC,CAIjCI,OAJiC;AAAA,cAKjCC,cALiC,GAMjCL,OANiC,CAKjCK,cALiC;AAQrC,eACI,oBAAC,WAAD;AACI,UAAA,QAAQ,EAAEH,QADd;AAEI,UAAA,OAAO,EAAEC,OAFb;AAGI,UAAA,OAAO,EAAEC,OAHb;AAII,UAAA,cAAc,EAAEC,cAJpB;AAKI,UAAA,GAAG,EAAEJ,GALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,OAjBM,CAAP;AAkBH,KA3B8B;AAAA;;AAE/B;AAEAK,EAAAA,iBAAiB,GAAG,CACnB,CAL8B,CAO/B;;;AAsBAC,EAAAA,MAAM,GAAG;AAAA,UAEGT,WAFH,GAEmB,KAAKU,KAFxB,CAEGV,WAFH;AAGL,UAAMW,aAAa,GAAGX,WAAW,CAACY,MAAlC;AAEA,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,aADL,+BAHJ,EAQI,oBAAC,YAAD;AACI,MAAA,YAAY,EAAE,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAaI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAiBQA,aAAa,GACb,KAAKZ,eAAL,CAAqBC,WAArB,CADa,GAEb,cAnBR,CADJ;AA0BH;;AA5D8B;;AAgEnCF,UAAU,CAACe,SAAX,GAAuB;AACnBb,EAAAA,WAAW,EAAEZ,SAAS,CAAC0B,KADJ,CACiB;;AADjB,CAAvB;AAIAhB,UAAU,CAACiB,YAAX,GAA0B;AACtBf,EAAAA,WAAW,EAAE;AADS,CAA1B;AAIA,eAAeF,UAAf","sourcesContent":["// 상위 컴포넌트: components/BoardDetail.js\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport CommentItem from './CommentItem';\nimport CommentInput from './CommentInput';\nimport { colors } from \"../../../styles/variables\";\n\n/* Styled Components */\n\n/* CommentBox 영역 div */\nconst CommentArea = styled.div`\n    padding: 1.5rem 1rem;\n    background-color: ${colors.gray_bg};\n    border-radius: 8px;\n    width: 100%;\n    min-height: 10rem;\n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n`;\n\n/* 댓글 갯수의 정보 + 작성자에게 메시지 보내기 링크 태그 */\nconst CommentHeader = styled.div`\n    width: 100%;\n    margin-bottom: 1.5rem;\n\n    height: 2rem;\n    line-height: 2rem;\n    font-size: 1.5rem;\n`;\n\n/* CommentInput 아래에 margin과 흰색 마감 선을 넣을 것임 */\nconst BottomOfInputDiv = styled.div`\n    width: 100%;\n    padding-bottom: 1.5rem;\n    margin-bottom: 1.5rem;\n    border-bottom: 1px solid ${colors.white};\n`;\n\n/////////////////////////////////////////\n\n/* React Components */\n\nclass CommentBox extends Component {\n\n    // 더보기 상태 (isMoreSee) 추가\n\n    componentDidMount() {\n    }\n\n    // map을 이용해 array 데이터를 render하는 함수\n    _renderComments = (commentList) => {\n        return commentList.map((comment, idx) => {\n            const {\n                username,\n                content,\n                created,\n                subCommentList\n            } = comment;\n\n            return (\n                <CommentItem\n                    username={username}\n                    content={content}\n                    created={created}\n                    subCommentList={subCommentList}\n                    key={idx}\n                />\n            )\n        })\n    }\n\n    render() {\n\n        const { commentList } = this.props;\n        const numOfComments = commentList.length;\n\n        return (\n            <CommentArea>\n                \n                {/* 댓글 개수 + 작성자에게 메시지 보내기 */}\n                <CommentHeader>\n                    {numOfComments} 개의 댓글\n                </CommentHeader>\n\n                {/* 댓글 작성 란 */}\n                <CommentInput \n                    isSubComment={false}\n                />\n\n                {/* 댓글 입력란 밑의 영역 및 흰색 선 */}\n                <BottomOfInputDiv />\n                \n                {/* 댓글 render */}\n                {\n                    numOfComments ?\n                    this._renderComments(commentList) :\n                    '아직 댓글이 없습니다.'\n                }\n\n                {/* //////////////////////////// */}\n            </CommentArea>\n        )\n    }\n}\n\n\nCommentBox.propTypes = {\n    commentList: PropTypes.array,       // 댓글 데이터를 가지고 있는 array\n}\n\nCommentBox.defaultProps = {\n    commentList: []\n}\n\nexport default CommentBox;"]},"metadata":{},"sourceType":"module"}