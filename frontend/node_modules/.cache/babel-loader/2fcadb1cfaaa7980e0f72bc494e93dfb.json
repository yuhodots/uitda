{"ast":null,"code":"import _defineProperty from \"/Users/soogeun/Documents/GitHub/Uitda-Soogeun-WorkSpace/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { STRUCTURE_SEARCH_BAR_ON, STRUCTURE_SEARCH_BAR_OFF, STRUCTURE_HEADER_ON, STRUCTURE_HEADER_OFF, STRUCTURE_CATEGORY_ON, STRUCTURE_CATEGORY_OFF } from \"../actions/ActionTypes\";\nconst InitialState = {\n  isSearchBarOn: false,\n  isHeaderOn: true,\n  isCategoryOn: false\n};\nexport default function structure(state = InitialState, action) {\n  switch (action.type) {\n    // 헤더의 검색 창\n    case STRUCTURE_SEARCH_BAR_ON:\n      return _objectSpread({}, state, {\n        isSearchBarOn: true\n      });\n\n    case STRUCTURE_SEARCH_BAR_OFF:\n      return _objectSpread({}, state, {\n        isSearchBarOn: false // 헤더\n\n      });\n\n    case STRUCTURE_HEADER_ON:\n      return _objectSpread({}, state, {\n        isHeaderOn: true\n      });\n\n    case STRUCTURE_HEADER_OFF:\n      return _objectSpread({}, state, {\n        isHeaderOn: false // 헤더의 카테고리 옵션\n\n      });\n\n    case STRUCTURE_CATEGORY_ON:\n      return _objectSpread({}, state, {\n        isCategoryOn: true\n      });\n\n    case STRUCTURE_CATEGORY_OFF:\n      return _objectSpread({}, state, {\n        isCategoryOn: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/soogeun/Documents/GitHub/Uitda-Soogeun-WorkSpace/frontend/src/store/reducers/structure.js"],"names":["STRUCTURE_SEARCH_BAR_ON","STRUCTURE_SEARCH_BAR_OFF","STRUCTURE_HEADER_ON","STRUCTURE_HEADER_OFF","STRUCTURE_CATEGORY_ON","STRUCTURE_CATEGORY_OFF","InitialState","isSearchBarOn","isHeaderOn","isCategoryOn","structure","state","action","type"],"mappings":";;;;;;AAAA,SACIA,uBADJ,EAEIC,wBAFJ,EAGIC,mBAHJ,EAIIC,oBAJJ,EAKIC,qBALJ,EAMIC,sBANJ,QAOQ,wBAPR;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,UAAU,EAAE,IAFK;AAGjBC,EAAAA,YAAY,EAAE;AAHG,CAArB;AAMA,eAAe,SAASC,SAAT,CAAoBC,KAAK,GAAGL,YAA5B,EAA0CM,MAA1C,EAAkD;AAE7D,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKb,uBAAL;AACI,+BACOW,KADP;AAEIJ,QAAAA,aAAa,EAAE;AAFnB;;AAKJ,SAAKN,wBAAL;AACI,+BACOU,KADP;AAEIJ,QAAAA,aAAa,EAAE,KAFnB,CAKJ;;AALI;;AAMJ,SAAKL,mBAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,UAAU,EAAE;AAFhB;;AAKJ,SAAKL,oBAAL;AACI,+BACOQ,KADP;AAEIH,QAAAA,UAAU,EAAE,KAFhB,CAKJ;;AALI;;AAMJ,SAAKJ,qBAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,YAAY,EAAE;AAFlB;;AAKJ,SAAKJ,sBAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,YAAY,EAAE;AAFlB;;AAMJ;AACI,aAAOE,KAAP;AA1CR;AA4CH","sourcesContent":["import { \n    STRUCTURE_SEARCH_BAR_ON,\n    STRUCTURE_SEARCH_BAR_OFF,\n    STRUCTURE_HEADER_ON,\n    STRUCTURE_HEADER_OFF,\n    STRUCTURE_CATEGORY_ON,\n    STRUCTURE_CATEGORY_OFF\n } from \"../actions/ActionTypes\";\n\n\nconst InitialState = {\n    isSearchBarOn: false,\n    isHeaderOn: true,\n    isCategoryOn: false,\n}\n\nexport default function structure (state = InitialState, action) {\n\n    switch (action.type) {\n        // 헤더의 검색 창\n        case STRUCTURE_SEARCH_BAR_ON:\n            return {\n                ...state,\n                isSearchBarOn: true\n            }\n\n        case STRUCTURE_SEARCH_BAR_OFF:\n            return {\n                ...state,\n                isSearchBarOn: false\n            }\n\n        // 헤더\n        case STRUCTURE_HEADER_ON:\n            return {\n                ...state,\n                isHeaderOn: true\n            }\n    \n        case STRUCTURE_HEADER_OFF:\n            return {\n                ...state,\n                isHeaderOn: false\n            }\n            \n        // 헤더의 카테고리 옵션\n        case STRUCTURE_CATEGORY_ON:\n            return {\n                ...state,\n                isCategoryOn: true\n            }\n    \n        case STRUCTURE_CATEGORY_OFF:\n            return {\n                ...state,\n                isCategoryOn: false\n            }\n            \n    \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}